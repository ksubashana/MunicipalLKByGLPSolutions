@using System.ComponentModel.DataAnnotations
@using Localization.Forms
@using Microsoft.Extensions.Localization
@using MuniLK.Application.PropertiesLK.DTOs
@using MuniLK.Application.Services.DTOs
@using MuniLK.Web.Interfaces
@using MuniLK.Web.Services
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Microsoft.AspNetCore.Components
@using MuniLK.Web.Components.Pages.Flows
@using Syncfusion.Blazor.Popups

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation
@inject IStringLocalizer<ContactForm> localizer
@inject ILookupService LookupService

@if (RenderAsPopup)
{
    <SfDialog Width="700px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
        <DialogTemplates>
            <Content>
                @RenderForm()
            </Content>
        </DialogTemplates>
    </SfDialog>
}
else
{
    <div class="property-form-inline">
        @RenderForm()
    </div>
}

@code {
    private RenderFragment RenderForm() => __builder =>
    {
        <EditForm Model="@PropertyModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <h3 class="mb-3">Create New Property</h3>

            <div class="row g-3">

                <div class="col-md-6">
                    <SfTextBox Placeholder="Address" @bind-Value="PropertyModel.Address" FloatLabelType="FloatLabelType.Auto" />
                    <ValidationMessage For="@(() => PropertyModel.Address)" />
                </div>

                <div class="col-md-6">
                    <SfDropDownList TValue="Guid" TItem="LookupDto" DataSource="@PropertyTypes"
                                    @bind-Value="PropertyModel.PropertyTypeId" Placeholder="Select Property Type"
                                    FloatLabelType="FloatLabelType.Auto">
                        <DropDownListFieldSettings Text="Value" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                    <ValidationMessage For="@(() => PropertyModel.PropertyTypeId)" />
                </div>

                <div class="col-md-6">
                    <SfNumericTextBox TValue="decimal" @bind-Value="PropertyModel.AssessmentValue"
                                      Placeholder="Assessment Value" FloatLabelType="FloatLabelType.Auto" />
                    <ValidationMessage For="@(() => PropertyModel.AssessmentValue)" />
                </div>

                <div class="col-md-6">
                    <SfNumericTextBox TValue="int?" @bind-Value="PropertyModel.WardNumber"
                                      Placeholder="Ward Number" FloatLabelType="FloatLabelType.Auto" />
                </div>

                <div class="col-md-6">
                    <SfDropDownList TValue="Guid?" TItem="LookupDto" DataSource="@Zones"
                                    @bind-Value="PropertyModel.ZoneId" Placeholder="Select Zone"
                                    FloatLabelType="FloatLabelType.Auto">
                        <DropDownListFieldSettings Text="Value" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>

                <div class="col-md-6">
                    <SfNumericTextBox TValue="decimal?" @bind-Value="PropertyModel.LandAreaInSqMeters"
                                      Placeholder="Land Area (sq.m)" FloatLabelType="FloatLabelType.Auto" />
                </div>

                <div class="col-md-6">
                    <SfDropDownList TValue="Guid?" TItem="LookupDto" DataSource="@LandExtentUnits"
                                    @bind-Value="PropertyModel.LandExtentId" Placeholder="Land Extent Unit"
                                    FloatLabelType="FloatLabelType.Auto">
                        <DropDownListFieldSettings Text="Value" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>

                <div class="col-md-6">
                    <SfTextBox Placeholder="Title Deed Number" @bind-Value="PropertyModel.TitleDeedNumber"
                               FloatLabelType="FloatLabelType.Auto" />
                </div>

                <div class="col-md-6">
                    <SfDropDownList TValue="Guid?" TItem="LookupDto" DataSource="@OwnershipTypes"
                                    @bind-Value="PropertyModel.OwnershipTypeId" Placeholder="Ownership Type"
                                    FloatLabelType="FloatLabelType.Auto">
                        <DropDownListFieldSettings Text="Value" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>

                <div class="col-md-6">
                    <SfCheckBox @bind-Checked="PropertyModel.IsCommercialUse" Label="Commercial Use" />
                </div>

                <div class="col-md-6">
                    <SfNumericTextBox TValue="int?" @bind-Value="PropertyModel.NumberOfBuildings"
                                      Placeholder="Number of Buildings" FloatLabelType="FloatLabelType.Auto" />
                </div>

                <div class="col-md-6">
                    <SfDropDownList TValue="Guid?" TItem="LookupDto" DataSource="@ConstructionTypes"
                                    @bind-Value="PropertyModel.ConstructionTypeId" Placeholder="Construction Type"
                                    FloatLabelType="FloatLabelType.Auto">
                        <DropDownListFieldSettings Text="Value" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>

                <div class="col-md-6">
                    <SfDropDownList TValue="Guid?" TItem="LookupDto" DataSource="@RoadAccessTypes"
                                    @bind-Value="PropertyModel.RoadAccessTypeId" Placeholder="Road Access Type"
                                    FloatLabelType="FloatLabelType.Auto">
                        <DropDownListFieldSettings Text="Value" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>

                </div>

                <div class="col-md-6">
                    <SfDropDownList TValue="Guid?" TItem="LookupDto" DataSource="@GSDivisions"
                                    @bind-Value="PropertyModel.GSDivisionId" Placeholder="GS Division"
                                    FloatLabelType="FloatLabelType.Auto">
                        <DropDownListFieldSettings Text="Value" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>

                <div class="col-md-6">
                    <SfDropDownList TValue="Guid?" TItem="LookupDto" DataSource="@ElectoralDivisions"
                                    @bind-Value="PropertyModel.ElectoralDivisionId" Placeholder="Electoral Division"
                                    FloatLabelType="FloatLabelType.Auto">
                        <DropDownListFieldSettings Text="Value" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>

                <div class="col-md-6">
                    <SfCheckBox @bind-Checked="PropertyModel.WaterConnection" Label="Water Connection" />
                </div>

                <div class="col-md-6">
                    <SfCheckBox @bind-Checked="PropertyModel.ElectricityConnection" Label="Electricity Connection" />
                </div>

                <div class="col-md-6">
                    <SfNumericTextBox TValue="int?" @bind-Value="PropertyModel.LastAssessmentYear"
                                      Placeholder="Last Assessment Year" FloatLabelType="FloatLabelType.Auto" />
                </div>

                <div class="col-md-6">
                    <SfCheckBox @bind-Checked="PropertyModel.IsDisputed" Label="Disputed Property" />
                </div>

                <div class="col-md-6">
                    <SfTextBox Placeholder="Photo URL" @bind-Value="PropertyModel.PhotoUrl" FloatLabelType="FloatLabelType.Auto" />
                </div>

                <div class="col-md-6">
                    <SfTextBox Placeholder="Coordinates (lat,lng)" @bind-Value="PropertyModel.LocationCoordinates"
                               FloatLabelType="FloatLabelType.Auto" />
                </div>
            </div>

            <div class="mt-4">
                <SfButton Type="Submit" CssClass="e-primary">Submit</SfButton>
            </div>
        </EditForm>
    };
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }
    [Parameter] public EventCallback<PropertyResponse> OnPropertyCreated { get; set; }
    [Parameter] public bool RenderAsPopup { get; set; } = true; // default true

    private CreatePropertyRequest PropertyModel = new();

    private List<LookupDto> PropertyTypes = new();
    private List<LookupDto> Zones = new();
    private List<LookupDto> LandExtentUnits = new();
    private List<LookupDto> OwnershipTypes = new();
    private List<LookupDto> ConstructionTypes = new();
    private List<LookupDto> RoadAccessTypes = new();
    private List<LookupDto> GSDivisions = new();
    private List<LookupDto> ElectoralDivisions = new();

    private DropDownListFieldSettings LookupFields = new()
    { 
        Value = "Id",
        Text = "Value"
    };

    protected override async Task OnInitializedAsync()
    {
        PropertyTypes = await LookupService.LoadLookupAsync("PropertyTypes");
        Zones = await LookupService.LoadLookupAsync("Zone");
        LandExtentUnits = await LookupService.LoadLookupAsync("LandExtentUnit");
        OwnershipTypes = await LookupService.LoadLookupAsync("PropertyOwnershipType");
        ConstructionTypes = await LookupService.LoadLookupAsync("ConstructionType");
        RoadAccessTypes = await LookupService.LoadLookupAsync("RoadAccessType");
        GSDivisions = await LookupService.LoadLookupAsync("GSDivision");
        ElectoralDivisions = await LookupService.LoadLookupAsync("ElectoralDivision");

    }

    // private async Task<List<LookupDto>> LoadLookupAsync(string category)
    // {
    //     var client = HttpClientFactory.CreateClient("AuthorizedClient");

    //     try
    //     {
    //         Console.WriteLine($"Fetching lookups for: {category}");
    //         var result = await client.GetFromJsonAsync<List<LookupDto>>($"api/lookups/values/byname/{category}");
    //         return result ?? new List<LookupDto>();
    //     }
    //     catch (Exception ex)
    //     {
    //         Console.WriteLine($"Error loading {category}: {ex.Message}");
    //         return new List<LookupDto>();
    //     }
    // }

    private async Task HandleValidSubmit()
    {
        var client = HttpClientFactory.CreateClient("AuthorizedClient");

        var response = await client.PostAsJsonAsync("api/Properties/Create", PropertyModel);
        if (response.IsSuccessStatusCode)
        {
            var created = await response.Content.ReadFromJsonAsync<PropertyResponse>();
            await OnPropertyCreated.InvokeAsync(created);
            await IsVisibleChanged.InvokeAsync(false);
        }
        else
        {
            // TODO: Show validation or error message
        }
    }


}
