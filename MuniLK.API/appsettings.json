{
  "ConnectionStrings": {
    "DefaultConnection": "Server=KAVISHKA;Database=MuniLKDbGLPSolutions;User Id=sa;Password=1234;TrustServerCertificate=True;",
    "AzureBlobStorageConnection": "DefaultEndpointsProtocol=https;AccountName=blobtestaccount01;AccountKey=FcfdAHcOSejmHzj1kMXHP0IyHT/OQdjXUK0FPcZ+d72FvKEgwgaUHc4cgkT6AzuJu1ek808dFxSj+AStaLrATg==;EndpointSuffix=core.windows.net"
  },
  "AzureBlobStorage": {
    "ContainerName": "munilkdocuments" 
  },
  "Serilog": {
    "Using": [ "Serilog.Sinks.RabbitMQ", "Serilog.Sinks.Console" ],
    "MinimumLevel": {
      "Default": "Information"
    },
    "WriteTo": [
      {
        "Name": "RabbitMQ",
        "Args": {
          "hostnames": [ "localhost" ],
          "username": "guest",
          "password": "guest",
          "exchange": "munilk-logs-exchange",
          "exchangeType": "direct",
          "port": 5800,
          "RoutingKey": "munilk-logs-route",
          "autoCreateExchange": true,
          "deliveryMode": 2,
          "formatter": "Serilog.Formatting.Compact.RenderedCompactJsonFormatter, Serilog.Formatting.Compact"
        }
      }
    ]
  },
  "Jwt": {
    "Key": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI0NGIzYmQ3ZC1kNTM2LTRmNjQtYjU3Ny04MDc3MDJjZTM5ZWQiLCJqdGkiOiIxZjBlNzUwZC1mYTFjLTQyZjUtODAzZC03YTE2Yjc5YzdjYTUiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjQ0YjNiZDdkLWQ1MzYtNGY2NC1iNTc3LTgwNzcwMmNlMzllZCIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJrc3ViYXNoYW5hIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJ0ZW5hbnRpZCI6IjNiZTBmMjE2LTRjYzctNDY1YS05YjVjLTlhNzIxNjI2NDMxOCIsImV4cCI6MTc1NjM4MDU2MCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTE2NCIsImF1ZCI6Imh0dHBzOi8vbG9jYWxob3N0OjUxNjQifQ.nEQ3Tsn9xBEICRg9B8Exi6d7AgqpnjMlF6GVpmg1Tu0",
    "Issuer": "MuniLK-API",
    "Audience": "MuniLK-Web",
    "AccessTokenExpirationMinutes": 4, // How long the access token is valid
    "RefreshTokenExpirationDays": 7 // How long the refresh token is valid (conceptually, if stored)
  },
  "AllowedHosts": "*"
}